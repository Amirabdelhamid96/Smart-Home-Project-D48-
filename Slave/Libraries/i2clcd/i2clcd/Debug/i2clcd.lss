
i2clcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000aa2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000048  00800060  00000aa2  00000b36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000016  008000a8  008000a8  00000b7e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b7e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bdc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000c18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e18  00000000  00000000  00000ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006b9  00000000  00000000  00001ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000070a  00000000  00000000  00002171  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000016c  00000000  00000000  0000287c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003cd  00000000  00000000  000029e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000440  00000000  00000000  00002db5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000031f5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ea       	ldi	r30, 0xA2	; 162
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 3a       	cpi	r26, 0xA8	; 168
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 ea       	ldi	r26, 0xA8	; 168
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 3b       	cpi	r26, 0xBE	; 190
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 de 01 	call	0x3bc	; 0x3bc <main>
  8a:	0c 94 4f 05 	jmp	0xa9e	; 0xa9e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <toggle>:

char i2c_read(){
	TWCR  = (1<<TWEN) | (1<<TWINT);	//Enable I2C and clear interrupt
	while (!(TWCR & (1<<TWINT)));	//Read successful with all data received in TWDR
	return TWDR;
}
  92:	83 b1       	in	r24, 0x03	; 3
  94:	82 60       	ori	r24, 0x02	; 2
  96:	83 b9       	out	0x03, r24	; 3
  98:	84 e8       	ldi	r24, 0x84	; 132
  9a:	86 bf       	out	0x36, r24	; 54
  9c:	06 b6       	in	r0, 0x36	; 54
  9e:	07 fe       	sbrs	r0, 7
  a0:	fd cf       	rjmp	.-6      	; 0x9c <toggle+0xa>
  a2:	8f ec       	ldi	r24, 0xCF	; 207
  a4:	97 e0       	ldi	r25, 0x07	; 7
  a6:	01 97       	sbiw	r24, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <toggle+0x14>
  aa:	00 c0       	rjmp	.+0      	; 0xac <toggle+0x1a>
  ac:	00 00       	nop
  ae:	83 b1       	in	r24, 0x03	; 3
  b0:	8d 7f       	andi	r24, 0xFD	; 253
  b2:	83 b9       	out	0x03, r24	; 3
  b4:	84 e8       	ldi	r24, 0x84	; 132
  b6:	86 bf       	out	0x36, r24	; 54
  b8:	06 b6       	in	r0, 0x36	; 54
  ba:	07 fe       	sbrs	r0, 7
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <toggle+0x26>
  be:	08 95       	ret

000000c0 <lcd_send_cmd>:
  c0:	cf 93       	push	r28
  c2:	c8 2f       	mov	r28, r24
  c4:	83 b1       	in	r24, 0x03	; 3
  c6:	8e 7f       	andi	r24, 0xFE	; 254
  c8:	83 b9       	out	0x03, r24	; 3
  ca:	84 e8       	ldi	r24, 0x84	; 132
  cc:	86 bf       	out	0x36, r24	; 54
  ce:	06 b6       	in	r0, 0x36	; 54
  d0:	07 fe       	sbrs	r0, 7
  d2:	fd cf       	rjmp	.-6      	; 0xce <lcd_send_cmd+0xe>
  d4:	83 b1       	in	r24, 0x03	; 3
  d6:	8f 70       	andi	r24, 0x0F	; 15
  d8:	83 b9       	out	0x03, r24	; 3
  da:	84 e8       	ldi	r24, 0x84	; 132
  dc:	86 bf       	out	0x36, r24	; 54
  de:	06 b6       	in	r0, 0x36	; 54
  e0:	07 fe       	sbrs	r0, 7
  e2:	fd cf       	rjmp	.-6      	; 0xde <lcd_send_cmd+0x1e>
  e4:	83 b1       	in	r24, 0x03	; 3
  e6:	9c 2f       	mov	r25, r28
  e8:	90 7f       	andi	r25, 0xF0	; 240
  ea:	89 2b       	or	r24, r25
  ec:	83 b9       	out	0x03, r24	; 3
  ee:	84 e8       	ldi	r24, 0x84	; 132
  f0:	86 bf       	out	0x36, r24	; 54
  f2:	06 b6       	in	r0, 0x36	; 54
  f4:	07 fe       	sbrs	r0, 7
  f6:	fd cf       	rjmp	.-6      	; 0xf2 <lcd_send_cmd+0x32>
  f8:	0e 94 49 00 	call	0x92	; 0x92 <toggle>
  fc:	83 b1       	in	r24, 0x03	; 3
  fe:	8f 70       	andi	r24, 0x0F	; 15
 100:	83 b9       	out	0x03, r24	; 3
 102:	84 e8       	ldi	r24, 0x84	; 132
 104:	86 bf       	out	0x36, r24	; 54
 106:	06 b6       	in	r0, 0x36	; 54
 108:	07 fe       	sbrs	r0, 7
 10a:	fd cf       	rjmp	.-6      	; 0x106 <lcd_send_cmd+0x46>
 10c:	23 b1       	in	r18, 0x03	; 3
 10e:	30 e1       	ldi	r19, 0x10	; 16
 110:	c3 9f       	mul	r28, r19
 112:	c0 01       	movw	r24, r0
 114:	11 24       	eor	r1, r1
 116:	82 2b       	or	r24, r18
 118:	83 b9       	out	0x03, r24	; 3
 11a:	84 e8       	ldi	r24, 0x84	; 132
 11c:	86 bf       	out	0x36, r24	; 54
 11e:	06 b6       	in	r0, 0x36	; 54
 120:	07 fe       	sbrs	r0, 7
 122:	fd cf       	rjmp	.-6      	; 0x11e <lcd_send_cmd+0x5e>
 124:	0e 94 49 00 	call	0x92	; 0x92 <toggle>
 128:	cf 91       	pop	r28
 12a:	08 95       	ret

0000012c <lcd_send_hf_cmd>:
 12c:	93 b1       	in	r25, 0x03	; 3
 12e:	9e 7f       	andi	r25, 0xFE	; 254
 130:	93 b9       	out	0x03, r25	; 3
 132:	94 e8       	ldi	r25, 0x84	; 132
 134:	96 bf       	out	0x36, r25	; 54
 136:	06 b6       	in	r0, 0x36	; 54
 138:	07 fe       	sbrs	r0, 7
 13a:	fd cf       	rjmp	.-6      	; 0x136 <lcd_send_hf_cmd+0xa>
 13c:	93 b1       	in	r25, 0x03	; 3
 13e:	9f 70       	andi	r25, 0x0F	; 15
 140:	93 b9       	out	0x03, r25	; 3
 142:	94 e8       	ldi	r25, 0x84	; 132
 144:	96 bf       	out	0x36, r25	; 54
 146:	06 b6       	in	r0, 0x36	; 54
 148:	07 fe       	sbrs	r0, 7
 14a:	fd cf       	rjmp	.-6      	; 0x146 <lcd_send_hf_cmd+0x1a>
 14c:	93 b1       	in	r25, 0x03	; 3
 14e:	80 7f       	andi	r24, 0xF0	; 240
 150:	89 2b       	or	r24, r25
 152:	83 b9       	out	0x03, r24	; 3
 154:	84 e8       	ldi	r24, 0x84	; 132
 156:	86 bf       	out	0x36, r24	; 54
 158:	06 b6       	in	r0, 0x36	; 54
 15a:	07 fe       	sbrs	r0, 7
 15c:	fd cf       	rjmp	.-6      	; 0x158 <lcd_send_hf_cmd+0x2c>
 15e:	0e 94 49 00 	call	0x92	; 0x92 <toggle>
 162:	08 95       	ret

00000164 <lcd_send_data>:
 164:	cf 93       	push	r28
 166:	c8 2f       	mov	r28, r24
 168:	83 b1       	in	r24, 0x03	; 3
 16a:	81 60       	ori	r24, 0x01	; 1
 16c:	83 b9       	out	0x03, r24	; 3
 16e:	84 e8       	ldi	r24, 0x84	; 132
 170:	86 bf       	out	0x36, r24	; 54
 172:	06 b6       	in	r0, 0x36	; 54
 174:	07 fe       	sbrs	r0, 7
 176:	fd cf       	rjmp	.-6      	; 0x172 <lcd_send_data+0xe>
 178:	83 b1       	in	r24, 0x03	; 3
 17a:	8f 70       	andi	r24, 0x0F	; 15
 17c:	83 b9       	out	0x03, r24	; 3
 17e:	84 e8       	ldi	r24, 0x84	; 132
 180:	86 bf       	out	0x36, r24	; 54
 182:	06 b6       	in	r0, 0x36	; 54
 184:	07 fe       	sbrs	r0, 7
 186:	fd cf       	rjmp	.-6      	; 0x182 <lcd_send_data+0x1e>
 188:	83 b1       	in	r24, 0x03	; 3
 18a:	9c 2f       	mov	r25, r28
 18c:	90 7f       	andi	r25, 0xF0	; 240
 18e:	89 2b       	or	r24, r25
 190:	83 b9       	out	0x03, r24	; 3
 192:	84 e8       	ldi	r24, 0x84	; 132
 194:	86 bf       	out	0x36, r24	; 54
 196:	06 b6       	in	r0, 0x36	; 54
 198:	07 fe       	sbrs	r0, 7
 19a:	fd cf       	rjmp	.-6      	; 0x196 <lcd_send_data+0x32>
 19c:	0e 94 49 00 	call	0x92	; 0x92 <toggle>
 1a0:	83 b1       	in	r24, 0x03	; 3
 1a2:	8f 70       	andi	r24, 0x0F	; 15
 1a4:	83 b9       	out	0x03, r24	; 3
 1a6:	84 e8       	ldi	r24, 0x84	; 132
 1a8:	86 bf       	out	0x36, r24	; 54
 1aa:	06 b6       	in	r0, 0x36	; 54
 1ac:	07 fe       	sbrs	r0, 7
 1ae:	fd cf       	rjmp	.-6      	; 0x1aa <lcd_send_data+0x46>
 1b0:	23 b1       	in	r18, 0x03	; 3
 1b2:	30 e1       	ldi	r19, 0x10	; 16
 1b4:	c3 9f       	mul	r28, r19
 1b6:	c0 01       	movw	r24, r0
 1b8:	11 24       	eor	r1, r1
 1ba:	82 2b       	or	r24, r18
 1bc:	83 b9       	out	0x03, r24	; 3
 1be:	84 e8       	ldi	r24, 0x84	; 132
 1c0:	86 bf       	out	0x36, r24	; 54
 1c2:	06 b6       	in	r0, 0x36	; 54
 1c4:	07 fe       	sbrs	r0, 7
 1c6:	fd cf       	rjmp	.-6      	; 0x1c2 <lcd_send_data+0x5e>
 1c8:	0e 94 49 00 	call	0x92	; 0x92 <toggle>
 1cc:	cf 91       	pop	r28
 1ce:	08 95       	ret

000001d0 <lcd_init>:
 1d0:	80 e3       	ldi	r24, 0x30	; 48
 1d2:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_send_hf_cmd>
 1d6:	80 e3       	ldi	r24, 0x30	; 48
 1d8:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_send_hf_cmd>
 1dc:	80 e2       	ldi	r24, 0x20	; 32
 1de:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_send_hf_cmd>
 1e2:	88 e2       	ldi	r24, 0x28	; 40
 1e4:	0e 94 60 00 	call	0xc0	; 0xc0 <lcd_send_cmd>
 1e8:	8c e0       	ldi	r24, 0x0C	; 12
 1ea:	0e 94 60 00 	call	0xc0	; 0xc0 <lcd_send_cmd>
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	0e 94 60 00 	call	0xc0	; 0xc0 <lcd_send_cmd>
 1f4:	86 e0       	ldi	r24, 0x06	; 6
 1f6:	0e 94 60 00 	call	0xc0	; 0xc0 <lcd_send_cmd>
 1fa:	80 e8       	ldi	r24, 0x80	; 128
 1fc:	0e 94 60 00 	call	0xc0	; 0xc0 <lcd_send_cmd>
 200:	08 95       	ret

00000202 <lcd_send_string>:
 202:	cf 93       	push	r28
 204:	df 93       	push	r29
 206:	ec 01       	movw	r28, r24
 208:	03 c0       	rjmp	.+6      	; 0x210 <lcd_send_string+0xe>
 20a:	21 96       	adiw	r28, 0x01	; 1
 20c:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_send_data>
 210:	88 81       	ld	r24, Y
 212:	81 11       	cpse	r24, r1
 214:	fa cf       	rjmp	.-12     	; 0x20a <lcd_send_string+0x8>
 216:	df 91       	pop	r29
 218:	cf 91       	pop	r28
 21a:	08 95       	ret

0000021c <lcd_put_cur>:
 21c:	00 97       	sbiw	r24, 0x00	; 0
 21e:	19 f0       	breq	.+6      	; 0x226 <lcd_put_cur+0xa>
 220:	01 97       	sbiw	r24, 0x01	; 1
 222:	19 f0       	breq	.+6      	; 0x22a <lcd_put_cur+0xe>
 224:	03 c0       	rjmp	.+6      	; 0x22c <lcd_put_cur+0x10>
 226:	60 68       	ori	r22, 0x80	; 128
 228:	01 c0       	rjmp	.+2      	; 0x22c <lcd_put_cur+0x10>
 22a:	60 6c       	ori	r22, 0xC0	; 192
 22c:	86 2f       	mov	r24, r22
 22e:	0e 94 60 00 	call	0xc0	; 0xc0 <lcd_send_cmd>
 232:	08 95       	ret

00000234 <lcd_clear>:
 234:	cf 93       	push	r28
 236:	df 93       	push	r29
 238:	80 e8       	ldi	r24, 0x80	; 128
 23a:	0e 94 60 00 	call	0xc0	; 0xc0 <lcd_send_cmd>
 23e:	c0 e0       	ldi	r28, 0x00	; 0
 240:	d0 e0       	ldi	r29, 0x00	; 0
 242:	04 c0       	rjmp	.+8      	; 0x24c <lcd_clear+0x18>
 244:	80 e2       	ldi	r24, 0x20	; 32
 246:	0e 94 b2 00 	call	0x164	; 0x164 <lcd_send_data>
 24a:	21 96       	adiw	r28, 0x01	; 1
 24c:	c6 34       	cpi	r28, 0x46	; 70
 24e:	d1 05       	cpc	r29, r1
 250:	cc f3       	brlt	.-14     	; 0x244 <lcd_clear+0x10>
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	08 95       	ret

00000258 <i2c_init>:
 258:	82 e6       	ldi	r24, 0x62	; 98
 25a:	80 b9       	out	0x00, r24	; 0
 25c:	84 e0       	ldi	r24, 0x04	; 4
 25e:	86 bf       	out	0x36, r24	; 54
 260:	11 b8       	out	0x01, r1	; 1
 262:	08 95       	ret

00000264 <i2c_start>:
 264:	84 ea       	ldi	r24, 0xA4	; 164
 266:	86 bf       	out	0x36, r24	; 54
 268:	06 b6       	in	r0, 0x36	; 54
 26a:	07 fe       	sbrs	r0, 7
 26c:	fd cf       	rjmp	.-6      	; 0x268 <i2c_start+0x4>
 26e:	08 95       	ret

00000270 <i2c_write>:
 270:	83 b9       	out	0x03, r24	; 3
 272:	84 e8       	ldi	r24, 0x84	; 132
 274:	86 bf       	out	0x36, r24	; 54
 276:	06 b6       	in	r0, 0x36	; 54
 278:	07 fe       	sbrs	r0, 7
 27a:	fd cf       	rjmp	.-6      	; 0x276 <i2c_write+0x6>
 27c:	08 95       	ret

0000027e <Display>:
void Display()
{
 27e:	0f 93       	push	r16
 280:	1f 93       	push	r17
 282:	cf 93       	push	r28
 284:	df 93       	push	r29
	//LCD1
	i2c_write(LCD_1);
 286:	86 e7       	ldi	r24, 0x76	; 118
 288:	0e 94 38 01 	call	0x270	; 0x270 <i2c_write>
	i2c_start();
 28c:	0e 94 32 01 	call	0x264	; 0x264 <i2c_start>
	lcd_put_cur(0, 0);
 290:	60 e0       	ldi	r22, 0x00	; 0
 292:	70 e0       	ldi	r23, 0x00	; 0
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_put_cur>
	lcd_send_string("Lcd_1");
 29c:	80 e6       	ldi	r24, 0x60	; 96
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	0e 94 01 01 	call	0x202	; 0x202 <lcd_send_string>
	lcd_put_cur(1, 0);
 2a4:	60 e0       	ldi	r22, 0x00	; 0
 2a6:	70 e0       	ldi	r23, 0x00	; 0
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_put_cur>
	lcd_send_string("Count = ");
 2b0:	86 e6       	ldi	r24, 0x66	; 102
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	0e 94 01 01 	call	0x202	; 0x202 <lcd_send_string>
	lcd_put_cur(1, 8);
 2b8:	68 e0       	ldi	r22, 0x08	; 8
 2ba:	70 e0       	ldi	r23, 0x00	; 0
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_put_cur>
	sprintf(data, "%d", count1);
 2c4:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <count1+0x1>
 2c8:	8f 93       	push	r24
 2ca:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <count1>
 2ce:	8f 93       	push	r24
 2d0:	0f e6       	ldi	r16, 0x6F	; 111
 2d2:	10 e0       	ldi	r17, 0x00	; 0
 2d4:	1f 93       	push	r17
 2d6:	0f 93       	push	r16
 2d8:	cc ea       	ldi	r28, 0xAC	; 172
 2da:	d0 e0       	ldi	r29, 0x00	; 0
 2dc:	df 93       	push	r29
 2de:	cf 93       	push	r28
 2e0:	0e 94 65 02 	call	0x4ca	; 0x4ca <sprintf>
	lcd_send_string(data);
 2e4:	ce 01       	movw	r24, r28
 2e6:	0e 94 01 01 	call	0x202	; 0x202 <lcd_send_string>
	//LCD2
	i2c_write(LCD_2);
 2ea:	82 e7       	ldi	r24, 0x72	; 114
 2ec:	0e 94 38 01 	call	0x270	; 0x270 <i2c_write>
	i2c_start();
 2f0:	0e 94 32 01 	call	0x264	; 0x264 <i2c_start>
	lcd_put_cur(0, 0);
 2f4:	60 e0       	ldi	r22, 0x00	; 0
 2f6:	70 e0       	ldi	r23, 0x00	; 0
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_put_cur>
	lcd_send_string("Lcd_2");
 300:	82 e7       	ldi	r24, 0x72	; 114
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	0e 94 01 01 	call	0x202	; 0x202 <lcd_send_string>
	lcd_put_cur(1, 0);
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_put_cur>
	lcd_send_string("Count = ");
 314:	86 e6       	ldi	r24, 0x66	; 102
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	0e 94 01 01 	call	0x202	; 0x202 <lcd_send_string>
	lcd_put_cur(1, 8);
 31c:	68 e0       	ldi	r22, 0x08	; 8
 31e:	70 e0       	ldi	r23, 0x00	; 0
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_put_cur>
	sprintf(data, "%d", count2);
 328:	80 91 a9 00 	lds	r24, 0x00A9	; 0x8000a9 <__data_end+0x1>
 32c:	8f 93       	push	r24
 32e:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <__data_end>
 332:	8f 93       	push	r24
 334:	1f 93       	push	r17
 336:	0f 93       	push	r16
 338:	df 93       	push	r29
 33a:	cf 93       	push	r28
 33c:	0e 94 65 02 	call	0x4ca	; 0x4ca <sprintf>
	lcd_send_string(data);
 340:	ce 01       	movw	r24, r28
 342:	0e 94 01 01 	call	0x202	; 0x202 <lcd_send_string>
	//LCD3
	i2c_write(LCD_3);
 346:	8a e7       	ldi	r24, 0x7A	; 122
 348:	0e 94 38 01 	call	0x270	; 0x270 <i2c_write>
	i2c_start();
 34c:	0e 94 32 01 	call	0x264	; 0x264 <i2c_start>
	lcd_put_cur(0, 0);
 350:	60 e0       	ldi	r22, 0x00	; 0
 352:	70 e0       	ldi	r23, 0x00	; 0
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_put_cur>
	lcd_send_string("Lcd_3");
 35c:	88 e7       	ldi	r24, 0x78	; 120
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	0e 94 01 01 	call	0x202	; 0x202 <lcd_send_string>
	lcd_put_cur(1, 0);
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_put_cur>
	lcd_send_string("Count = ");
 370:	86 e6       	ldi	r24, 0x66	; 102
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	0e 94 01 01 	call	0x202	; 0x202 <lcd_send_string>
	lcd_put_cur(1, 8);
 378:	68 e0       	ldi	r22, 0x08	; 8
 37a:	70 e0       	ldi	r23, 0x00	; 0
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_put_cur>
	sprintf(data, "%d", count3);
 384:	80 91 ab 00 	lds	r24, 0x00AB	; 0x8000ab <count3+0x1>
 388:	8f 93       	push	r24
 38a:	80 91 aa 00 	lds	r24, 0x00AA	; 0x8000aa <count3>
 38e:	8f 93       	push	r24
 390:	1f 93       	push	r17
 392:	0f 93       	push	r16
 394:	df 93       	push	r29
 396:	cf 93       	push	r28
 398:	0e 94 65 02 	call	0x4ca	; 0x4ca <sprintf>
	lcd_send_string(data);
 39c:	ce 01       	movw	r24, r28
 39e:	0e 94 01 01 	call	0x202	; 0x202 <lcd_send_string>
}
 3a2:	8d b7       	in	r24, 0x3d	; 61
 3a4:	9e b7       	in	r25, 0x3e	; 62
 3a6:	42 96       	adiw	r24, 0x12	; 18
 3a8:	0f b6       	in	r0, 0x3f	; 63
 3aa:	f8 94       	cli
 3ac:	9e bf       	out	0x3e, r25	; 62
 3ae:	0f be       	out	0x3f, r0	; 63
 3b0:	8d bf       	out	0x3d, r24	; 61
 3b2:	df 91       	pop	r29
 3b4:	cf 91       	pop	r28
 3b6:	1f 91       	pop	r17
 3b8:	0f 91       	pop	r16
 3ba:	08 95       	ret

000003bc <main>:
	// I2C Port: PORTC
	// I2C SDA bit: 1
	// I2C SCL bit: 0
	// Bit Rate: 100 kHz.
	
	i2c_init();
 3bc:	0e 94 2c 01 	call	0x258	; 0x258 <i2c_init>
	i2c_start();
 3c0:	0e 94 32 01 	call	0x264	; 0x264 <i2c_start>
	
	i2c_write(LCD_1);
 3c4:	86 e7       	ldi	r24, 0x76	; 118
 3c6:	0e 94 38 01 	call	0x270	; 0x270 <i2c_write>
	lcd_init();
 3ca:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_init>
	lcd_clear();
 3ce:	0e 94 1a 01 	call	0x234	; 0x234 <lcd_clear>
	lcd_put_cur(0, 0);
 3d2:	60 e0       	ldi	r22, 0x00	; 0
 3d4:	70 e0       	ldi	r23, 0x00	; 0
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_put_cur>
	lcd_send_string("LCD_1 init :)");
 3de:	8e e7       	ldi	r24, 0x7E	; 126
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	0e 94 01 01 	call	0x202	; 0x202 <lcd_send_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3e6:	2f ef       	ldi	r18, 0xFF	; 255
 3e8:	89 e6       	ldi	r24, 0x69	; 105
 3ea:	98 e1       	ldi	r25, 0x18	; 24
 3ec:	21 50       	subi	r18, 0x01	; 1
 3ee:	80 40       	sbci	r24, 0x00	; 0
 3f0:	90 40       	sbci	r25, 0x00	; 0
 3f2:	e1 f7       	brne	.-8      	; 0x3ec <main+0x30>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <main+0x3a>
 3f6:	00 00       	nop
	_delay_ms(1000);
	lcd_clear();
 3f8:	0e 94 1a 01 	call	0x234	; 0x234 <lcd_clear>
	
	i2c_write(LCD_2);
 3fc:	82 e7       	ldi	r24, 0x72	; 114
 3fe:	0e 94 38 01 	call	0x270	; 0x270 <i2c_write>
	i2c_start();
 402:	0e 94 32 01 	call	0x264	; 0x264 <i2c_start>
	lcd_init();
 406:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_init>
	lcd_clear();
 40a:	0e 94 1a 01 	call	0x234	; 0x234 <lcd_clear>
	lcd_put_cur(0, 0);
 40e:	60 e0       	ldi	r22, 0x00	; 0
 410:	70 e0       	ldi	r23, 0x00	; 0
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_put_cur>
	lcd_send_string("LCD_2 init :)");
 41a:	8c e8       	ldi	r24, 0x8C	; 140
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	0e 94 01 01 	call	0x202	; 0x202 <lcd_send_string>
 422:	2f ef       	ldi	r18, 0xFF	; 255
 424:	89 e6       	ldi	r24, 0x69	; 105
 426:	98 e1       	ldi	r25, 0x18	; 24
 428:	21 50       	subi	r18, 0x01	; 1
 42a:	80 40       	sbci	r24, 0x00	; 0
 42c:	90 40       	sbci	r25, 0x00	; 0
 42e:	e1 f7       	brne	.-8      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 430:	00 c0       	rjmp	.+0      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 432:	00 00       	nop
	_delay_ms(1000);
	lcd_clear();
 434:	0e 94 1a 01 	call	0x234	; 0x234 <lcd_clear>
	
	i2c_write(LCD_3);
 438:	8a e7       	ldi	r24, 0x7A	; 122
 43a:	0e 94 38 01 	call	0x270	; 0x270 <i2c_write>
	i2c_start();
 43e:	0e 94 32 01 	call	0x264	; 0x264 <i2c_start>
	lcd_init();
 442:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_init>
	lcd_clear();
 446:	0e 94 1a 01 	call	0x234	; 0x234 <lcd_clear>
	lcd_put_cur(0, 0);
 44a:	60 e0       	ldi	r22, 0x00	; 0
 44c:	70 e0       	ldi	r23, 0x00	; 0
 44e:	80 e0       	ldi	r24, 0x00	; 0
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	0e 94 0e 01 	call	0x21c	; 0x21c <lcd_put_cur>
	lcd_send_string("LCD_3 init :)");
 456:	8a e9       	ldi	r24, 0x9A	; 154
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	0e 94 01 01 	call	0x202	; 0x202 <lcd_send_string>
 45e:	2f ef       	ldi	r18, 0xFF	; 255
 460:	89 e6       	ldi	r24, 0x69	; 105
 462:	98 e1       	ldi	r25, 0x18	; 24
 464:	21 50       	subi	r18, 0x01	; 1
 466:	80 40       	sbci	r24, 0x00	; 0
 468:	90 40       	sbci	r25, 0x00	; 0
 46a:	e1 f7       	brne	.-8      	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 46c:	00 c0       	rjmp	.+0      	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 46e:	00 00       	nop
	_delay_ms(1000);
	lcd_clear();
 470:	0e 94 1a 01 	call	0x234	; 0x234 <lcd_clear>

	while (1)
	{
		count1++;
 474:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <count1>
 478:	90 91 bd 00 	lds	r25, 0x00BD	; 0x8000bd <count1+0x1>
 47c:	01 96       	adiw	r24, 0x01	; 1
 47e:	90 93 bd 00 	sts	0x00BD, r25	; 0x8000bd <count1+0x1>
 482:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <count1>
		if (count1%2==0)
 486:	80 fd       	sbrc	r24, 0
 488:	14 c0       	rjmp	.+40     	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
		{
			count2++;
 48a:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <__data_end>
 48e:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <__data_end+0x1>
 492:	01 96       	adiw	r24, 0x01	; 1
 494:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__data_end+0x1>
 498:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__data_end>
			if(count2%2 == 0) count3++;
 49c:	80 fd       	sbrc	r24, 0
 49e:	09 c0       	rjmp	.+18     	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
 4a0:	80 91 aa 00 	lds	r24, 0x00AA	; 0x8000aa <count3>
 4a4:	90 91 ab 00 	lds	r25, 0x00AB	; 0x8000ab <count3+0x1>
 4a8:	01 96       	adiw	r24, 0x01	; 1
 4aa:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <count3+0x1>
 4ae:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <count3>
		}
		Display();
 4b2:	0e 94 3f 01 	call	0x27e	; 0x27e <Display>
 4b6:	2f ef       	ldi	r18, 0xFF	; 255
 4b8:	89 e6       	ldi	r24, 0x69	; 105
 4ba:	98 e1       	ldi	r25, 0x18	; 24
 4bc:	21 50       	subi	r18, 0x01	; 1
 4be:	80 40       	sbci	r24, 0x00	; 0
 4c0:	90 40       	sbci	r25, 0x00	; 0
 4c2:	e1 f7       	brne	.-8      	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
 4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 4c6:	00 00       	nop
 4c8:	d5 cf       	rjmp	.-86     	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>

000004ca <sprintf>:
 4ca:	ae e0       	ldi	r26, 0x0E	; 14
 4cc:	b0 e0       	ldi	r27, 0x00	; 0
 4ce:	eb e6       	ldi	r30, 0x6B	; 107
 4d0:	f2 e0       	ldi	r31, 0x02	; 2
 4d2:	0c 94 26 05 	jmp	0xa4c	; 0xa4c <__prologue_saves__+0x1c>
 4d6:	0d 89       	ldd	r16, Y+21	; 0x15
 4d8:	1e 89       	ldd	r17, Y+22	; 0x16
 4da:	86 e0       	ldi	r24, 0x06	; 6
 4dc:	8c 83       	std	Y+4, r24	; 0x04
 4de:	1a 83       	std	Y+2, r17	; 0x02
 4e0:	09 83       	std	Y+1, r16	; 0x01
 4e2:	8f ef       	ldi	r24, 0xFF	; 255
 4e4:	9f e7       	ldi	r25, 0x7F	; 127
 4e6:	9e 83       	std	Y+6, r25	; 0x06
 4e8:	8d 83       	std	Y+5, r24	; 0x05
 4ea:	ae 01       	movw	r20, r28
 4ec:	47 5e       	subi	r20, 0xE7	; 231
 4ee:	5f 4f       	sbci	r21, 0xFF	; 255
 4f0:	6f 89       	ldd	r22, Y+23	; 0x17
 4f2:	78 8d       	ldd	r23, Y+24	; 0x18
 4f4:	ce 01       	movw	r24, r28
 4f6:	01 96       	adiw	r24, 0x01	; 1
 4f8:	0e 94 87 02 	call	0x50e	; 0x50e <vfprintf>
 4fc:	ef 81       	ldd	r30, Y+7	; 0x07
 4fe:	f8 85       	ldd	r31, Y+8	; 0x08
 500:	e0 0f       	add	r30, r16
 502:	f1 1f       	adc	r31, r17
 504:	10 82       	st	Z, r1
 506:	2e 96       	adiw	r28, 0x0e	; 14
 508:	e4 e0       	ldi	r30, 0x04	; 4
 50a:	0c 94 42 05 	jmp	0xa84	; 0xa84 <__epilogue_restores__+0x1c>

0000050e <vfprintf>:
 50e:	ab e0       	ldi	r26, 0x0B	; 11
 510:	b0 e0       	ldi	r27, 0x00	; 0
 512:	ed e8       	ldi	r30, 0x8D	; 141
 514:	f2 e0       	ldi	r31, 0x02	; 2
 516:	0c 94 18 05 	jmp	0xa30	; 0xa30 <__prologue_saves__>
 51a:	6c 01       	movw	r12, r24
 51c:	7b 01       	movw	r14, r22
 51e:	8a 01       	movw	r16, r20
 520:	fc 01       	movw	r30, r24
 522:	17 82       	std	Z+7, r1	; 0x07
 524:	16 82       	std	Z+6, r1	; 0x06
 526:	83 81       	ldd	r24, Z+3	; 0x03
 528:	81 ff       	sbrs	r24, 1
 52a:	cc c1       	rjmp	.+920    	; 0x8c4 <__stack+0x65>
 52c:	ce 01       	movw	r24, r28
 52e:	01 96       	adiw	r24, 0x01	; 1
 530:	3c 01       	movw	r6, r24
 532:	f6 01       	movw	r30, r12
 534:	93 81       	ldd	r25, Z+3	; 0x03
 536:	f7 01       	movw	r30, r14
 538:	93 fd       	sbrc	r25, 3
 53a:	85 91       	lpm	r24, Z+
 53c:	93 ff       	sbrs	r25, 3
 53e:	81 91       	ld	r24, Z+
 540:	7f 01       	movw	r14, r30
 542:	88 23       	and	r24, r24
 544:	09 f4       	brne	.+2      	; 0x548 <vfprintf+0x3a>
 546:	ba c1       	rjmp	.+884    	; 0x8bc <__stack+0x5d>
 548:	85 32       	cpi	r24, 0x25	; 37
 54a:	39 f4       	brne	.+14     	; 0x55a <vfprintf+0x4c>
 54c:	93 fd       	sbrc	r25, 3
 54e:	85 91       	lpm	r24, Z+
 550:	93 ff       	sbrs	r25, 3
 552:	81 91       	ld	r24, Z+
 554:	7f 01       	movw	r14, r30
 556:	85 32       	cpi	r24, 0x25	; 37
 558:	29 f4       	brne	.+10     	; 0x564 <vfprintf+0x56>
 55a:	b6 01       	movw	r22, r12
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	0e 94 7e 04 	call	0x8fc	; 0x8fc <fputc>
 562:	e7 cf       	rjmp	.-50     	; 0x532 <vfprintf+0x24>
 564:	91 2c       	mov	r9, r1
 566:	21 2c       	mov	r2, r1
 568:	31 2c       	mov	r3, r1
 56a:	ff e1       	ldi	r31, 0x1F	; 31
 56c:	f3 15       	cp	r31, r3
 56e:	d8 f0       	brcs	.+54     	; 0x5a6 <vfprintf+0x98>
 570:	8b 32       	cpi	r24, 0x2B	; 43
 572:	79 f0       	breq	.+30     	; 0x592 <vfprintf+0x84>
 574:	38 f4       	brcc	.+14     	; 0x584 <vfprintf+0x76>
 576:	80 32       	cpi	r24, 0x20	; 32
 578:	79 f0       	breq	.+30     	; 0x598 <vfprintf+0x8a>
 57a:	83 32       	cpi	r24, 0x23	; 35
 57c:	a1 f4       	brne	.+40     	; 0x5a6 <vfprintf+0x98>
 57e:	23 2d       	mov	r18, r3
 580:	20 61       	ori	r18, 0x10	; 16
 582:	1d c0       	rjmp	.+58     	; 0x5be <vfprintf+0xb0>
 584:	8d 32       	cpi	r24, 0x2D	; 45
 586:	61 f0       	breq	.+24     	; 0x5a0 <vfprintf+0x92>
 588:	80 33       	cpi	r24, 0x30	; 48
 58a:	69 f4       	brne	.+26     	; 0x5a6 <vfprintf+0x98>
 58c:	23 2d       	mov	r18, r3
 58e:	21 60       	ori	r18, 0x01	; 1
 590:	16 c0       	rjmp	.+44     	; 0x5be <vfprintf+0xb0>
 592:	83 2d       	mov	r24, r3
 594:	82 60       	ori	r24, 0x02	; 2
 596:	38 2e       	mov	r3, r24
 598:	e3 2d       	mov	r30, r3
 59a:	e4 60       	ori	r30, 0x04	; 4
 59c:	3e 2e       	mov	r3, r30
 59e:	2a c0       	rjmp	.+84     	; 0x5f4 <vfprintf+0xe6>
 5a0:	f3 2d       	mov	r31, r3
 5a2:	f8 60       	ori	r31, 0x08	; 8
 5a4:	1d c0       	rjmp	.+58     	; 0x5e0 <vfprintf+0xd2>
 5a6:	37 fc       	sbrc	r3, 7
 5a8:	2d c0       	rjmp	.+90     	; 0x604 <vfprintf+0xf6>
 5aa:	20 ed       	ldi	r18, 0xD0	; 208
 5ac:	28 0f       	add	r18, r24
 5ae:	2a 30       	cpi	r18, 0x0A	; 10
 5b0:	40 f0       	brcs	.+16     	; 0x5c2 <vfprintf+0xb4>
 5b2:	8e 32       	cpi	r24, 0x2E	; 46
 5b4:	b9 f4       	brne	.+46     	; 0x5e4 <vfprintf+0xd6>
 5b6:	36 fc       	sbrc	r3, 6
 5b8:	81 c1       	rjmp	.+770    	; 0x8bc <__stack+0x5d>
 5ba:	23 2d       	mov	r18, r3
 5bc:	20 64       	ori	r18, 0x40	; 64
 5be:	32 2e       	mov	r3, r18
 5c0:	19 c0       	rjmp	.+50     	; 0x5f4 <vfprintf+0xe6>
 5c2:	36 fe       	sbrs	r3, 6
 5c4:	06 c0       	rjmp	.+12     	; 0x5d2 <vfprintf+0xc4>
 5c6:	8a e0       	ldi	r24, 0x0A	; 10
 5c8:	98 9e       	mul	r9, r24
 5ca:	20 0d       	add	r18, r0
 5cc:	11 24       	eor	r1, r1
 5ce:	92 2e       	mov	r9, r18
 5d0:	11 c0       	rjmp	.+34     	; 0x5f4 <vfprintf+0xe6>
 5d2:	ea e0       	ldi	r30, 0x0A	; 10
 5d4:	2e 9e       	mul	r2, r30
 5d6:	20 0d       	add	r18, r0
 5d8:	11 24       	eor	r1, r1
 5da:	22 2e       	mov	r2, r18
 5dc:	f3 2d       	mov	r31, r3
 5de:	f0 62       	ori	r31, 0x20	; 32
 5e0:	3f 2e       	mov	r3, r31
 5e2:	08 c0       	rjmp	.+16     	; 0x5f4 <vfprintf+0xe6>
 5e4:	8c 36       	cpi	r24, 0x6C	; 108
 5e6:	21 f4       	brne	.+8      	; 0x5f0 <vfprintf+0xe2>
 5e8:	83 2d       	mov	r24, r3
 5ea:	80 68       	ori	r24, 0x80	; 128
 5ec:	38 2e       	mov	r3, r24
 5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <vfprintf+0xe6>
 5f0:	88 36       	cpi	r24, 0x68	; 104
 5f2:	41 f4       	brne	.+16     	; 0x604 <vfprintf+0xf6>
 5f4:	f7 01       	movw	r30, r14
 5f6:	93 fd       	sbrc	r25, 3
 5f8:	85 91       	lpm	r24, Z+
 5fa:	93 ff       	sbrs	r25, 3
 5fc:	81 91       	ld	r24, Z+
 5fe:	7f 01       	movw	r14, r30
 600:	81 11       	cpse	r24, r1
 602:	b3 cf       	rjmp	.-154    	; 0x56a <vfprintf+0x5c>
 604:	98 2f       	mov	r25, r24
 606:	9f 7d       	andi	r25, 0xDF	; 223
 608:	95 54       	subi	r25, 0x45	; 69
 60a:	93 30       	cpi	r25, 0x03	; 3
 60c:	28 f4       	brcc	.+10     	; 0x618 <vfprintf+0x10a>
 60e:	0c 5f       	subi	r16, 0xFC	; 252
 610:	1f 4f       	sbci	r17, 0xFF	; 255
 612:	9f e3       	ldi	r25, 0x3F	; 63
 614:	99 83       	std	Y+1, r25	; 0x01
 616:	0d c0       	rjmp	.+26     	; 0x632 <vfprintf+0x124>
 618:	83 36       	cpi	r24, 0x63	; 99
 61a:	31 f0       	breq	.+12     	; 0x628 <vfprintf+0x11a>
 61c:	83 37       	cpi	r24, 0x73	; 115
 61e:	71 f0       	breq	.+28     	; 0x63c <vfprintf+0x12e>
 620:	83 35       	cpi	r24, 0x53	; 83
 622:	09 f0       	breq	.+2      	; 0x626 <vfprintf+0x118>
 624:	59 c0       	rjmp	.+178    	; 0x6d8 <vfprintf+0x1ca>
 626:	21 c0       	rjmp	.+66     	; 0x66a <vfprintf+0x15c>
 628:	f8 01       	movw	r30, r16
 62a:	80 81       	ld	r24, Z
 62c:	89 83       	std	Y+1, r24	; 0x01
 62e:	0e 5f       	subi	r16, 0xFE	; 254
 630:	1f 4f       	sbci	r17, 0xFF	; 255
 632:	88 24       	eor	r8, r8
 634:	83 94       	inc	r8
 636:	91 2c       	mov	r9, r1
 638:	53 01       	movw	r10, r6
 63a:	13 c0       	rjmp	.+38     	; 0x662 <vfprintf+0x154>
 63c:	28 01       	movw	r4, r16
 63e:	f2 e0       	ldi	r31, 0x02	; 2
 640:	4f 0e       	add	r4, r31
 642:	51 1c       	adc	r5, r1
 644:	f8 01       	movw	r30, r16
 646:	a0 80       	ld	r10, Z
 648:	b1 80       	ldd	r11, Z+1	; 0x01
 64a:	36 fe       	sbrs	r3, 6
 64c:	03 c0       	rjmp	.+6      	; 0x654 <vfprintf+0x146>
 64e:	69 2d       	mov	r22, r9
 650:	70 e0       	ldi	r23, 0x00	; 0
 652:	02 c0       	rjmp	.+4      	; 0x658 <vfprintf+0x14a>
 654:	6f ef       	ldi	r22, 0xFF	; 255
 656:	7f ef       	ldi	r23, 0xFF	; 255
 658:	c5 01       	movw	r24, r10
 65a:	0e 94 73 04 	call	0x8e6	; 0x8e6 <strnlen>
 65e:	4c 01       	movw	r8, r24
 660:	82 01       	movw	r16, r4
 662:	f3 2d       	mov	r31, r3
 664:	ff 77       	andi	r31, 0x7F	; 127
 666:	3f 2e       	mov	r3, r31
 668:	16 c0       	rjmp	.+44     	; 0x696 <vfprintf+0x188>
 66a:	28 01       	movw	r4, r16
 66c:	22 e0       	ldi	r18, 0x02	; 2
 66e:	42 0e       	add	r4, r18
 670:	51 1c       	adc	r5, r1
 672:	f8 01       	movw	r30, r16
 674:	a0 80       	ld	r10, Z
 676:	b1 80       	ldd	r11, Z+1	; 0x01
 678:	36 fe       	sbrs	r3, 6
 67a:	03 c0       	rjmp	.+6      	; 0x682 <vfprintf+0x174>
 67c:	69 2d       	mov	r22, r9
 67e:	70 e0       	ldi	r23, 0x00	; 0
 680:	02 c0       	rjmp	.+4      	; 0x686 <vfprintf+0x178>
 682:	6f ef       	ldi	r22, 0xFF	; 255
 684:	7f ef       	ldi	r23, 0xFF	; 255
 686:	c5 01       	movw	r24, r10
 688:	0e 94 68 04 	call	0x8d0	; 0x8d0 <strnlen_P>
 68c:	4c 01       	movw	r8, r24
 68e:	f3 2d       	mov	r31, r3
 690:	f0 68       	ori	r31, 0x80	; 128
 692:	3f 2e       	mov	r3, r31
 694:	82 01       	movw	r16, r4
 696:	33 fc       	sbrc	r3, 3
 698:	1b c0       	rjmp	.+54     	; 0x6d0 <vfprintf+0x1c2>
 69a:	82 2d       	mov	r24, r2
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	88 16       	cp	r8, r24
 6a0:	99 06       	cpc	r9, r25
 6a2:	b0 f4       	brcc	.+44     	; 0x6d0 <vfprintf+0x1c2>
 6a4:	b6 01       	movw	r22, r12
 6a6:	80 e2       	ldi	r24, 0x20	; 32
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	0e 94 7e 04 	call	0x8fc	; 0x8fc <fputc>
 6ae:	2a 94       	dec	r2
 6b0:	f4 cf       	rjmp	.-24     	; 0x69a <vfprintf+0x18c>
 6b2:	f5 01       	movw	r30, r10
 6b4:	37 fc       	sbrc	r3, 7
 6b6:	85 91       	lpm	r24, Z+
 6b8:	37 fe       	sbrs	r3, 7
 6ba:	81 91       	ld	r24, Z+
 6bc:	5f 01       	movw	r10, r30
 6be:	b6 01       	movw	r22, r12
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	0e 94 7e 04 	call	0x8fc	; 0x8fc <fputc>
 6c6:	21 10       	cpse	r2, r1
 6c8:	2a 94       	dec	r2
 6ca:	21 e0       	ldi	r18, 0x01	; 1
 6cc:	82 1a       	sub	r8, r18
 6ce:	91 08       	sbc	r9, r1
 6d0:	81 14       	cp	r8, r1
 6d2:	91 04       	cpc	r9, r1
 6d4:	71 f7       	brne	.-36     	; 0x6b2 <vfprintf+0x1a4>
 6d6:	e8 c0       	rjmp	.+464    	; 0x8a8 <__stack+0x49>
 6d8:	84 36       	cpi	r24, 0x64	; 100
 6da:	11 f0       	breq	.+4      	; 0x6e0 <vfprintf+0x1d2>
 6dc:	89 36       	cpi	r24, 0x69	; 105
 6de:	41 f5       	brne	.+80     	; 0x730 <vfprintf+0x222>
 6e0:	f8 01       	movw	r30, r16
 6e2:	37 fe       	sbrs	r3, 7
 6e4:	07 c0       	rjmp	.+14     	; 0x6f4 <vfprintf+0x1e6>
 6e6:	60 81       	ld	r22, Z
 6e8:	71 81       	ldd	r23, Z+1	; 0x01
 6ea:	82 81       	ldd	r24, Z+2	; 0x02
 6ec:	93 81       	ldd	r25, Z+3	; 0x03
 6ee:	0c 5f       	subi	r16, 0xFC	; 252
 6f0:	1f 4f       	sbci	r17, 0xFF	; 255
 6f2:	08 c0       	rjmp	.+16     	; 0x704 <vfprintf+0x1f6>
 6f4:	60 81       	ld	r22, Z
 6f6:	71 81       	ldd	r23, Z+1	; 0x01
 6f8:	07 2e       	mov	r0, r23
 6fa:	00 0c       	add	r0, r0
 6fc:	88 0b       	sbc	r24, r24
 6fe:	99 0b       	sbc	r25, r25
 700:	0e 5f       	subi	r16, 0xFE	; 254
 702:	1f 4f       	sbci	r17, 0xFF	; 255
 704:	f3 2d       	mov	r31, r3
 706:	ff 76       	andi	r31, 0x6F	; 111
 708:	3f 2e       	mov	r3, r31
 70a:	97 ff       	sbrs	r25, 7
 70c:	09 c0       	rjmp	.+18     	; 0x720 <vfprintf+0x212>
 70e:	90 95       	com	r25
 710:	80 95       	com	r24
 712:	70 95       	com	r23
 714:	61 95       	neg	r22
 716:	7f 4f       	sbci	r23, 0xFF	; 255
 718:	8f 4f       	sbci	r24, 0xFF	; 255
 71a:	9f 4f       	sbci	r25, 0xFF	; 255
 71c:	f0 68       	ori	r31, 0x80	; 128
 71e:	3f 2e       	mov	r3, r31
 720:	2a e0       	ldi	r18, 0x0A	; 10
 722:	30 e0       	ldi	r19, 0x00	; 0
 724:	a3 01       	movw	r20, r6
 726:	0e 94 ba 04 	call	0x974	; 0x974 <__ultoa_invert>
 72a:	88 2e       	mov	r8, r24
 72c:	86 18       	sub	r8, r6
 72e:	45 c0       	rjmp	.+138    	; 0x7ba <vfprintf+0x2ac>
 730:	85 37       	cpi	r24, 0x75	; 117
 732:	31 f4       	brne	.+12     	; 0x740 <vfprintf+0x232>
 734:	23 2d       	mov	r18, r3
 736:	2f 7e       	andi	r18, 0xEF	; 239
 738:	b2 2e       	mov	r11, r18
 73a:	2a e0       	ldi	r18, 0x0A	; 10
 73c:	30 e0       	ldi	r19, 0x00	; 0
 73e:	25 c0       	rjmp	.+74     	; 0x78a <vfprintf+0x27c>
 740:	93 2d       	mov	r25, r3
 742:	99 7f       	andi	r25, 0xF9	; 249
 744:	b9 2e       	mov	r11, r25
 746:	8f 36       	cpi	r24, 0x6F	; 111
 748:	c1 f0       	breq	.+48     	; 0x77a <vfprintf+0x26c>
 74a:	18 f4       	brcc	.+6      	; 0x752 <vfprintf+0x244>
 74c:	88 35       	cpi	r24, 0x58	; 88
 74e:	79 f0       	breq	.+30     	; 0x76e <vfprintf+0x260>
 750:	b5 c0       	rjmp	.+362    	; 0x8bc <__stack+0x5d>
 752:	80 37       	cpi	r24, 0x70	; 112
 754:	19 f0       	breq	.+6      	; 0x75c <vfprintf+0x24e>
 756:	88 37       	cpi	r24, 0x78	; 120
 758:	21 f0       	breq	.+8      	; 0x762 <vfprintf+0x254>
 75a:	b0 c0       	rjmp	.+352    	; 0x8bc <__stack+0x5d>
 75c:	e9 2f       	mov	r30, r25
 75e:	e0 61       	ori	r30, 0x10	; 16
 760:	be 2e       	mov	r11, r30
 762:	b4 fe       	sbrs	r11, 4
 764:	0d c0       	rjmp	.+26     	; 0x780 <vfprintf+0x272>
 766:	fb 2d       	mov	r31, r11
 768:	f4 60       	ori	r31, 0x04	; 4
 76a:	bf 2e       	mov	r11, r31
 76c:	09 c0       	rjmp	.+18     	; 0x780 <vfprintf+0x272>
 76e:	34 fe       	sbrs	r3, 4
 770:	0a c0       	rjmp	.+20     	; 0x786 <vfprintf+0x278>
 772:	29 2f       	mov	r18, r25
 774:	26 60       	ori	r18, 0x06	; 6
 776:	b2 2e       	mov	r11, r18
 778:	06 c0       	rjmp	.+12     	; 0x786 <vfprintf+0x278>
 77a:	28 e0       	ldi	r18, 0x08	; 8
 77c:	30 e0       	ldi	r19, 0x00	; 0
 77e:	05 c0       	rjmp	.+10     	; 0x78a <vfprintf+0x27c>
 780:	20 e1       	ldi	r18, 0x10	; 16
 782:	30 e0       	ldi	r19, 0x00	; 0
 784:	02 c0       	rjmp	.+4      	; 0x78a <vfprintf+0x27c>
 786:	20 e1       	ldi	r18, 0x10	; 16
 788:	32 e0       	ldi	r19, 0x02	; 2
 78a:	f8 01       	movw	r30, r16
 78c:	b7 fe       	sbrs	r11, 7
 78e:	07 c0       	rjmp	.+14     	; 0x79e <vfprintf+0x290>
 790:	60 81       	ld	r22, Z
 792:	71 81       	ldd	r23, Z+1	; 0x01
 794:	82 81       	ldd	r24, Z+2	; 0x02
 796:	93 81       	ldd	r25, Z+3	; 0x03
 798:	0c 5f       	subi	r16, 0xFC	; 252
 79a:	1f 4f       	sbci	r17, 0xFF	; 255
 79c:	06 c0       	rjmp	.+12     	; 0x7aa <vfprintf+0x29c>
 79e:	60 81       	ld	r22, Z
 7a0:	71 81       	ldd	r23, Z+1	; 0x01
 7a2:	80 e0       	ldi	r24, 0x00	; 0
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	0e 5f       	subi	r16, 0xFE	; 254
 7a8:	1f 4f       	sbci	r17, 0xFF	; 255
 7aa:	a3 01       	movw	r20, r6
 7ac:	0e 94 ba 04 	call	0x974	; 0x974 <__ultoa_invert>
 7b0:	88 2e       	mov	r8, r24
 7b2:	86 18       	sub	r8, r6
 7b4:	fb 2d       	mov	r31, r11
 7b6:	ff 77       	andi	r31, 0x7F	; 127
 7b8:	3f 2e       	mov	r3, r31
 7ba:	36 fe       	sbrs	r3, 6
 7bc:	0d c0       	rjmp	.+26     	; 0x7d8 <vfprintf+0x2ca>
 7be:	23 2d       	mov	r18, r3
 7c0:	2e 7f       	andi	r18, 0xFE	; 254
 7c2:	a2 2e       	mov	r10, r18
 7c4:	89 14       	cp	r8, r9
 7c6:	58 f4       	brcc	.+22     	; 0x7de <vfprintf+0x2d0>
 7c8:	34 fe       	sbrs	r3, 4
 7ca:	0b c0       	rjmp	.+22     	; 0x7e2 <vfprintf+0x2d4>
 7cc:	32 fc       	sbrc	r3, 2
 7ce:	09 c0       	rjmp	.+18     	; 0x7e2 <vfprintf+0x2d4>
 7d0:	83 2d       	mov	r24, r3
 7d2:	8e 7e       	andi	r24, 0xEE	; 238
 7d4:	a8 2e       	mov	r10, r24
 7d6:	05 c0       	rjmp	.+10     	; 0x7e2 <vfprintf+0x2d4>
 7d8:	b8 2c       	mov	r11, r8
 7da:	a3 2c       	mov	r10, r3
 7dc:	03 c0       	rjmp	.+6      	; 0x7e4 <vfprintf+0x2d6>
 7de:	b8 2c       	mov	r11, r8
 7e0:	01 c0       	rjmp	.+2      	; 0x7e4 <vfprintf+0x2d6>
 7e2:	b9 2c       	mov	r11, r9
 7e4:	a4 fe       	sbrs	r10, 4
 7e6:	0f c0       	rjmp	.+30     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7e8:	fe 01       	movw	r30, r28
 7ea:	e8 0d       	add	r30, r8
 7ec:	f1 1d       	adc	r31, r1
 7ee:	80 81       	ld	r24, Z
 7f0:	80 33       	cpi	r24, 0x30	; 48
 7f2:	21 f4       	brne	.+8      	; 0x7fc <vfprintf+0x2ee>
 7f4:	9a 2d       	mov	r25, r10
 7f6:	99 7e       	andi	r25, 0xE9	; 233
 7f8:	a9 2e       	mov	r10, r25
 7fa:	09 c0       	rjmp	.+18     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 7fc:	a2 fe       	sbrs	r10, 2
 7fe:	06 c0       	rjmp	.+12     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 800:	b3 94       	inc	r11
 802:	b3 94       	inc	r11
 804:	04 c0       	rjmp	.+8      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 806:	8a 2d       	mov	r24, r10
 808:	86 78       	andi	r24, 0x86	; 134
 80a:	09 f0       	breq	.+2      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 80c:	b3 94       	inc	r11
 80e:	a3 fc       	sbrc	r10, 3
 810:	11 c0       	rjmp	.+34     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 812:	a0 fe       	sbrs	r10, 0
 814:	06 c0       	rjmp	.+12     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 816:	b2 14       	cp	r11, r2
 818:	88 f4       	brcc	.+34     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 81a:	28 0c       	add	r2, r8
 81c:	92 2c       	mov	r9, r2
 81e:	9b 18       	sub	r9, r11
 820:	0e c0       	rjmp	.+28     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 822:	b2 14       	cp	r11, r2
 824:	60 f4       	brcc	.+24     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 826:	b6 01       	movw	r22, r12
 828:	80 e2       	ldi	r24, 0x20	; 32
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	0e 94 7e 04 	call	0x8fc	; 0x8fc <fputc>
 830:	b3 94       	inc	r11
 832:	f7 cf       	rjmp	.-18     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 834:	b2 14       	cp	r11, r2
 836:	18 f4       	brcc	.+6      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 838:	2b 18       	sub	r2, r11
 83a:	02 c0       	rjmp	.+4      	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 83c:	98 2c       	mov	r9, r8
 83e:	21 2c       	mov	r2, r1
 840:	a4 fe       	sbrs	r10, 4
 842:	10 c0       	rjmp	.+32     	; 0x864 <__stack+0x5>
 844:	b6 01       	movw	r22, r12
 846:	80 e3       	ldi	r24, 0x30	; 48
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	0e 94 7e 04 	call	0x8fc	; 0x8fc <fputc>
 84e:	a2 fe       	sbrs	r10, 2
 850:	17 c0       	rjmp	.+46     	; 0x880 <__stack+0x21>
 852:	a1 fc       	sbrc	r10, 1
 854:	03 c0       	rjmp	.+6      	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 856:	88 e7       	ldi	r24, 0x78	; 120
 858:	90 e0       	ldi	r25, 0x00	; 0
 85a:	02 c0       	rjmp	.+4      	; 0x860 <__stack+0x1>
 85c:	88 e5       	ldi	r24, 0x58	; 88
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	b6 01       	movw	r22, r12
 862:	0c c0       	rjmp	.+24     	; 0x87c <__stack+0x1d>
 864:	8a 2d       	mov	r24, r10
 866:	86 78       	andi	r24, 0x86	; 134
 868:	59 f0       	breq	.+22     	; 0x880 <__stack+0x21>
 86a:	a1 fe       	sbrs	r10, 1
 86c:	02 c0       	rjmp	.+4      	; 0x872 <__stack+0x13>
 86e:	8b e2       	ldi	r24, 0x2B	; 43
 870:	01 c0       	rjmp	.+2      	; 0x874 <__stack+0x15>
 872:	80 e2       	ldi	r24, 0x20	; 32
 874:	a7 fc       	sbrc	r10, 7
 876:	8d e2       	ldi	r24, 0x2D	; 45
 878:	b6 01       	movw	r22, r12
 87a:	90 e0       	ldi	r25, 0x00	; 0
 87c:	0e 94 7e 04 	call	0x8fc	; 0x8fc <fputc>
 880:	89 14       	cp	r8, r9
 882:	38 f4       	brcc	.+14     	; 0x892 <__stack+0x33>
 884:	b6 01       	movw	r22, r12
 886:	80 e3       	ldi	r24, 0x30	; 48
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	0e 94 7e 04 	call	0x8fc	; 0x8fc <fputc>
 88e:	9a 94       	dec	r9
 890:	f7 cf       	rjmp	.-18     	; 0x880 <__stack+0x21>
 892:	8a 94       	dec	r8
 894:	f3 01       	movw	r30, r6
 896:	e8 0d       	add	r30, r8
 898:	f1 1d       	adc	r31, r1
 89a:	80 81       	ld	r24, Z
 89c:	b6 01       	movw	r22, r12
 89e:	90 e0       	ldi	r25, 0x00	; 0
 8a0:	0e 94 7e 04 	call	0x8fc	; 0x8fc <fputc>
 8a4:	81 10       	cpse	r8, r1
 8a6:	f5 cf       	rjmp	.-22     	; 0x892 <__stack+0x33>
 8a8:	22 20       	and	r2, r2
 8aa:	09 f4       	brne	.+2      	; 0x8ae <__stack+0x4f>
 8ac:	42 ce       	rjmp	.-892    	; 0x532 <vfprintf+0x24>
 8ae:	b6 01       	movw	r22, r12
 8b0:	80 e2       	ldi	r24, 0x20	; 32
 8b2:	90 e0       	ldi	r25, 0x00	; 0
 8b4:	0e 94 7e 04 	call	0x8fc	; 0x8fc <fputc>
 8b8:	2a 94       	dec	r2
 8ba:	f6 cf       	rjmp	.-20     	; 0x8a8 <__stack+0x49>
 8bc:	f6 01       	movw	r30, r12
 8be:	86 81       	ldd	r24, Z+6	; 0x06
 8c0:	97 81       	ldd	r25, Z+7	; 0x07
 8c2:	02 c0       	rjmp	.+4      	; 0x8c8 <__stack+0x69>
 8c4:	8f ef       	ldi	r24, 0xFF	; 255
 8c6:	9f ef       	ldi	r25, 0xFF	; 255
 8c8:	2b 96       	adiw	r28, 0x0b	; 11
 8ca:	e2 e1       	ldi	r30, 0x12	; 18
 8cc:	0c 94 34 05 	jmp	0xa68	; 0xa68 <__epilogue_restores__>

000008d0 <strnlen_P>:
 8d0:	fc 01       	movw	r30, r24
 8d2:	05 90       	lpm	r0, Z+
 8d4:	61 50       	subi	r22, 0x01	; 1
 8d6:	70 40       	sbci	r23, 0x00	; 0
 8d8:	01 10       	cpse	r0, r1
 8da:	d8 f7       	brcc	.-10     	; 0x8d2 <strnlen_P+0x2>
 8dc:	80 95       	com	r24
 8de:	90 95       	com	r25
 8e0:	8e 0f       	add	r24, r30
 8e2:	9f 1f       	adc	r25, r31
 8e4:	08 95       	ret

000008e6 <strnlen>:
 8e6:	fc 01       	movw	r30, r24
 8e8:	61 50       	subi	r22, 0x01	; 1
 8ea:	70 40       	sbci	r23, 0x00	; 0
 8ec:	01 90       	ld	r0, Z+
 8ee:	01 10       	cpse	r0, r1
 8f0:	d8 f7       	brcc	.-10     	; 0x8e8 <strnlen+0x2>
 8f2:	80 95       	com	r24
 8f4:	90 95       	com	r25
 8f6:	8e 0f       	add	r24, r30
 8f8:	9f 1f       	adc	r25, r31
 8fa:	08 95       	ret

000008fc <fputc>:
 8fc:	0f 93       	push	r16
 8fe:	1f 93       	push	r17
 900:	cf 93       	push	r28
 902:	df 93       	push	r29
 904:	fb 01       	movw	r30, r22
 906:	23 81       	ldd	r18, Z+3	; 0x03
 908:	21 fd       	sbrc	r18, 1
 90a:	03 c0       	rjmp	.+6      	; 0x912 <fputc+0x16>
 90c:	8f ef       	ldi	r24, 0xFF	; 255
 90e:	9f ef       	ldi	r25, 0xFF	; 255
 910:	2c c0       	rjmp	.+88     	; 0x96a <fputc+0x6e>
 912:	22 ff       	sbrs	r18, 2
 914:	16 c0       	rjmp	.+44     	; 0x942 <fputc+0x46>
 916:	46 81       	ldd	r20, Z+6	; 0x06
 918:	57 81       	ldd	r21, Z+7	; 0x07
 91a:	24 81       	ldd	r18, Z+4	; 0x04
 91c:	35 81       	ldd	r19, Z+5	; 0x05
 91e:	42 17       	cp	r20, r18
 920:	53 07       	cpc	r21, r19
 922:	44 f4       	brge	.+16     	; 0x934 <fputc+0x38>
 924:	a0 81       	ld	r26, Z
 926:	b1 81       	ldd	r27, Z+1	; 0x01
 928:	9d 01       	movw	r18, r26
 92a:	2f 5f       	subi	r18, 0xFF	; 255
 92c:	3f 4f       	sbci	r19, 0xFF	; 255
 92e:	31 83       	std	Z+1, r19	; 0x01
 930:	20 83       	st	Z, r18
 932:	8c 93       	st	X, r24
 934:	26 81       	ldd	r18, Z+6	; 0x06
 936:	37 81       	ldd	r19, Z+7	; 0x07
 938:	2f 5f       	subi	r18, 0xFF	; 255
 93a:	3f 4f       	sbci	r19, 0xFF	; 255
 93c:	37 83       	std	Z+7, r19	; 0x07
 93e:	26 83       	std	Z+6, r18	; 0x06
 940:	14 c0       	rjmp	.+40     	; 0x96a <fputc+0x6e>
 942:	8b 01       	movw	r16, r22
 944:	ec 01       	movw	r28, r24
 946:	fb 01       	movw	r30, r22
 948:	00 84       	ldd	r0, Z+8	; 0x08
 94a:	f1 85       	ldd	r31, Z+9	; 0x09
 94c:	e0 2d       	mov	r30, r0
 94e:	09 95       	icall
 950:	89 2b       	or	r24, r25
 952:	e1 f6       	brne	.-72     	; 0x90c <fputc+0x10>
 954:	d8 01       	movw	r26, r16
 956:	16 96       	adiw	r26, 0x06	; 6
 958:	8d 91       	ld	r24, X+
 95a:	9c 91       	ld	r25, X
 95c:	17 97       	sbiw	r26, 0x07	; 7
 95e:	01 96       	adiw	r24, 0x01	; 1
 960:	17 96       	adiw	r26, 0x07	; 7
 962:	9c 93       	st	X, r25
 964:	8e 93       	st	-X, r24
 966:	16 97       	sbiw	r26, 0x06	; 6
 968:	ce 01       	movw	r24, r28
 96a:	df 91       	pop	r29
 96c:	cf 91       	pop	r28
 96e:	1f 91       	pop	r17
 970:	0f 91       	pop	r16
 972:	08 95       	ret

00000974 <__ultoa_invert>:
 974:	fa 01       	movw	r30, r20
 976:	aa 27       	eor	r26, r26
 978:	28 30       	cpi	r18, 0x08	; 8
 97a:	51 f1       	breq	.+84     	; 0x9d0 <__ultoa_invert+0x5c>
 97c:	20 31       	cpi	r18, 0x10	; 16
 97e:	81 f1       	breq	.+96     	; 0x9e0 <__ultoa_invert+0x6c>
 980:	e8 94       	clt
 982:	6f 93       	push	r22
 984:	6e 7f       	andi	r22, 0xFE	; 254
 986:	6e 5f       	subi	r22, 0xFE	; 254
 988:	7f 4f       	sbci	r23, 0xFF	; 255
 98a:	8f 4f       	sbci	r24, 0xFF	; 255
 98c:	9f 4f       	sbci	r25, 0xFF	; 255
 98e:	af 4f       	sbci	r26, 0xFF	; 255
 990:	b1 e0       	ldi	r27, 0x01	; 1
 992:	3e d0       	rcall	.+124    	; 0xa10 <__ultoa_invert+0x9c>
 994:	b4 e0       	ldi	r27, 0x04	; 4
 996:	3c d0       	rcall	.+120    	; 0xa10 <__ultoa_invert+0x9c>
 998:	67 0f       	add	r22, r23
 99a:	78 1f       	adc	r23, r24
 99c:	89 1f       	adc	r24, r25
 99e:	9a 1f       	adc	r25, r26
 9a0:	a1 1d       	adc	r26, r1
 9a2:	68 0f       	add	r22, r24
 9a4:	79 1f       	adc	r23, r25
 9a6:	8a 1f       	adc	r24, r26
 9a8:	91 1d       	adc	r25, r1
 9aa:	a1 1d       	adc	r26, r1
 9ac:	6a 0f       	add	r22, r26
 9ae:	71 1d       	adc	r23, r1
 9b0:	81 1d       	adc	r24, r1
 9b2:	91 1d       	adc	r25, r1
 9b4:	a1 1d       	adc	r26, r1
 9b6:	20 d0       	rcall	.+64     	; 0x9f8 <__ultoa_invert+0x84>
 9b8:	09 f4       	brne	.+2      	; 0x9bc <__ultoa_invert+0x48>
 9ba:	68 94       	set
 9bc:	3f 91       	pop	r19
 9be:	2a e0       	ldi	r18, 0x0A	; 10
 9c0:	26 9f       	mul	r18, r22
 9c2:	11 24       	eor	r1, r1
 9c4:	30 19       	sub	r19, r0
 9c6:	30 5d       	subi	r19, 0xD0	; 208
 9c8:	31 93       	st	Z+, r19
 9ca:	de f6       	brtc	.-74     	; 0x982 <__ultoa_invert+0xe>
 9cc:	cf 01       	movw	r24, r30
 9ce:	08 95       	ret
 9d0:	46 2f       	mov	r20, r22
 9d2:	47 70       	andi	r20, 0x07	; 7
 9d4:	40 5d       	subi	r20, 0xD0	; 208
 9d6:	41 93       	st	Z+, r20
 9d8:	b3 e0       	ldi	r27, 0x03	; 3
 9da:	0f d0       	rcall	.+30     	; 0x9fa <__ultoa_invert+0x86>
 9dc:	c9 f7       	brne	.-14     	; 0x9d0 <__ultoa_invert+0x5c>
 9de:	f6 cf       	rjmp	.-20     	; 0x9cc <__ultoa_invert+0x58>
 9e0:	46 2f       	mov	r20, r22
 9e2:	4f 70       	andi	r20, 0x0F	; 15
 9e4:	40 5d       	subi	r20, 0xD0	; 208
 9e6:	4a 33       	cpi	r20, 0x3A	; 58
 9e8:	18 f0       	brcs	.+6      	; 0x9f0 <__ultoa_invert+0x7c>
 9ea:	49 5d       	subi	r20, 0xD9	; 217
 9ec:	31 fd       	sbrc	r19, 1
 9ee:	40 52       	subi	r20, 0x20	; 32
 9f0:	41 93       	st	Z+, r20
 9f2:	02 d0       	rcall	.+4      	; 0x9f8 <__ultoa_invert+0x84>
 9f4:	a9 f7       	brne	.-22     	; 0x9e0 <__ultoa_invert+0x6c>
 9f6:	ea cf       	rjmp	.-44     	; 0x9cc <__ultoa_invert+0x58>
 9f8:	b4 e0       	ldi	r27, 0x04	; 4
 9fa:	a6 95       	lsr	r26
 9fc:	97 95       	ror	r25
 9fe:	87 95       	ror	r24
 a00:	77 95       	ror	r23
 a02:	67 95       	ror	r22
 a04:	ba 95       	dec	r27
 a06:	c9 f7       	brne	.-14     	; 0x9fa <__ultoa_invert+0x86>
 a08:	00 97       	sbiw	r24, 0x00	; 0
 a0a:	61 05       	cpc	r22, r1
 a0c:	71 05       	cpc	r23, r1
 a0e:	08 95       	ret
 a10:	9b 01       	movw	r18, r22
 a12:	ac 01       	movw	r20, r24
 a14:	0a 2e       	mov	r0, r26
 a16:	06 94       	lsr	r0
 a18:	57 95       	ror	r21
 a1a:	47 95       	ror	r20
 a1c:	37 95       	ror	r19
 a1e:	27 95       	ror	r18
 a20:	ba 95       	dec	r27
 a22:	c9 f7       	brne	.-14     	; 0xa16 <__ultoa_invert+0xa2>
 a24:	62 0f       	add	r22, r18
 a26:	73 1f       	adc	r23, r19
 a28:	84 1f       	adc	r24, r20
 a2a:	95 1f       	adc	r25, r21
 a2c:	a0 1d       	adc	r26, r0
 a2e:	08 95       	ret

00000a30 <__prologue_saves__>:
 a30:	2f 92       	push	r2
 a32:	3f 92       	push	r3
 a34:	4f 92       	push	r4
 a36:	5f 92       	push	r5
 a38:	6f 92       	push	r6
 a3a:	7f 92       	push	r7
 a3c:	8f 92       	push	r8
 a3e:	9f 92       	push	r9
 a40:	af 92       	push	r10
 a42:	bf 92       	push	r11
 a44:	cf 92       	push	r12
 a46:	df 92       	push	r13
 a48:	ef 92       	push	r14
 a4a:	ff 92       	push	r15
 a4c:	0f 93       	push	r16
 a4e:	1f 93       	push	r17
 a50:	cf 93       	push	r28
 a52:	df 93       	push	r29
 a54:	cd b7       	in	r28, 0x3d	; 61
 a56:	de b7       	in	r29, 0x3e	; 62
 a58:	ca 1b       	sub	r28, r26
 a5a:	db 0b       	sbc	r29, r27
 a5c:	0f b6       	in	r0, 0x3f	; 63
 a5e:	f8 94       	cli
 a60:	de bf       	out	0x3e, r29	; 62
 a62:	0f be       	out	0x3f, r0	; 63
 a64:	cd bf       	out	0x3d, r28	; 61
 a66:	09 94       	ijmp

00000a68 <__epilogue_restores__>:
 a68:	2a 88       	ldd	r2, Y+18	; 0x12
 a6a:	39 88       	ldd	r3, Y+17	; 0x11
 a6c:	48 88       	ldd	r4, Y+16	; 0x10
 a6e:	5f 84       	ldd	r5, Y+15	; 0x0f
 a70:	6e 84       	ldd	r6, Y+14	; 0x0e
 a72:	7d 84       	ldd	r7, Y+13	; 0x0d
 a74:	8c 84       	ldd	r8, Y+12	; 0x0c
 a76:	9b 84       	ldd	r9, Y+11	; 0x0b
 a78:	aa 84       	ldd	r10, Y+10	; 0x0a
 a7a:	b9 84       	ldd	r11, Y+9	; 0x09
 a7c:	c8 84       	ldd	r12, Y+8	; 0x08
 a7e:	df 80       	ldd	r13, Y+7	; 0x07
 a80:	ee 80       	ldd	r14, Y+6	; 0x06
 a82:	fd 80       	ldd	r15, Y+5	; 0x05
 a84:	0c 81       	ldd	r16, Y+4	; 0x04
 a86:	1b 81       	ldd	r17, Y+3	; 0x03
 a88:	aa 81       	ldd	r26, Y+2	; 0x02
 a8a:	b9 81       	ldd	r27, Y+1	; 0x01
 a8c:	ce 0f       	add	r28, r30
 a8e:	d1 1d       	adc	r29, r1
 a90:	0f b6       	in	r0, 0x3f	; 63
 a92:	f8 94       	cli
 a94:	de bf       	out	0x3e, r29	; 62
 a96:	0f be       	out	0x3f, r0	; 63
 a98:	cd bf       	out	0x3d, r28	; 61
 a9a:	ed 01       	movw	r28, r26
 a9c:	08 95       	ret

00000a9e <_exit>:
 a9e:	f8 94       	cli

00000aa0 <__stop_program>:
 aa0:	ff cf       	rjmp	.-2      	; 0xaa0 <__stop_program>
